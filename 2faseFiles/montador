#!/usr/bin/python3
# -*- coding: utf-8 -*-
"""
Lê, na entrada padrão, um programa na linguagem de montagem da máquina
virtual e retorna um programa em C que executa este programa.

Uso:
    montador < entrada > saida
"""
from sys import stdin

l = stdin.readline()
ip = 0
tabsim = {}
sizes = list()
print('#include <stdio.h>')
print('#include "maq.h"')
print("INSTR prog[] = {")


# O seguinte loop é executado enquanto há conteúdo em l,
# que é preenchido com stdin.readline()
while l:
    #op armazena o opcode
    label = op = ""
    try:
        l = l[:l.index('#')]
    except:
        pass
    # keys é uma lista contendo as palavras (palavras: opcodes e numeros)
    # digitados pelo usuário
    keys = list()
    keys = l.split()
    # remover labels do código de máquina
    # ex de label: LOOP:
    if len(keys) > 0 and keys[0].endswith(":"):
        label = keys[0][:-1]
        tabsim[label]=ip
        keys.pop(0)
    # se houver código a ser convertido para a sintaxe de C:
    if len(keys) > 0:
        op = keys.pop(0)
        # inserir o OpCode no código.
        if op != '':
            print('{%s' %op),
            # se a função conter argumentos, incluí-los no código.
        if len(keys) != 0:
            # ignorar eventuais Strings colocadas após
            # o opcode (o usuário não especifica tipos, já que só
            # empilha NUM).
            # tenta converter para int a proxima key. Caso não funcione,
            # é porque era uma string, que deve ser removida
            try:
                key = int(keys[0])
            except:
                keys.pop(0)
            if op == 'ATK' or op == 'MOV' or op == 'CLT' or op == 'DEP':
                print ', ACAO',
            else:
                print ', NUM ',
            if len(keys) != 0:
                sizes.append(str(len(keys)));
                print(',{'),
                print (', '.join(keys)),
            print('}'),
        else:
            print(',NONE,{0}'),
            sizes.append('1')
            ip -= 1
    l = stdin.readline()
    if l:
        print "},"
    else:
        print "}"
    ip += 1 #avançar a instrução

print("};")
print('int sizes[] = {'),
print(', '.join(sizes)),
print('};')

#Funcao Main
print('');
print("int main(int ac, char **av) {");
print("	Maquina *maq = cria_maquina(prog, sizes);");
print("	exec_maquina(maq, 1000);");
print("	destroi_maquina(maq);");
print("	return 0;");
print("}");
