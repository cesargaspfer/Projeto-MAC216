#!/usr/bin/python3
# -*- coding: utf-8 -*-
"""
Lê, na entrada padrão, um programa na linguagem de montagem da máquina
virtual e retorna um programa em C que executa este programa.

Uso:
    montador < entrada > saida
"""
from sys import stdin

l = stdin.readline()
ip = 0
tabsim = {}

print('#include <stdio.h>')
print('#include "maq.h"')
print("INSTR prog[] = {")
while l:
    label = op = ""
    arg   = 0
    try:
        l = l[:l.index('#')]
    except:
        pass
    keys = l.split()
    if len(keys) > 0 and keys[0].endswith(":"):
        label = keys[0][:-1]           #jogando fora o ':'
        tabsim[label]=ip
        #print('***'+str(tabsim[label])+'***') esse tamsim[label] vale 7.
        #quando chegar no ENDIF, esse tabsim vai ser o argumento
        keys.pop(0)
    if len(keys) > 0:
        op = keys.pop(0)
    if len(keys) > 0:
        arg = keys.pop(0)
        if arg in tabsim: #no caso do fibo, quando chegar o endif, esse arg será o de tabsim (em tabsim há o valor 7)
            arg = tabsim[arg]
    if op != "":
        print(" {%s, %s},"%(op,arg))
    else:
        print('')
        ip -= 1
    l = stdin.readline()
    ip += 1 #avançar a instrução
print("};")

#Funcao Main
print('');
print("int main(int ac, char **av) {");
print("	Maquina *maq = cria_maquina(prog);");
print("	exec_maquina(maq, 100);");
print("	destroi_maquina(maq);");
print("	return 0;");
print("}");

"""
Comments:

1 - Coloquei o main, mas nao deve estar completo,
então o programa em c ainda não é compilável
2 - será que a gente precisa colocar todas as instruções do main
numa string aqui e printar ela?
3 - teste.c tem todo o trace;

Changes:
1 - Incluido libs de C nos print;
2 - Linha 38 -> print('');
3 - Incluido o Main, mas precisamos rever

Notes:
1 - tabsim é um set;
  -> http://www.python-course.eu/sets_frozensets.php
2 - INSTR prog[] cabeçalho de um instr. chamada prog
3 - try and except: semelhante a try catch java;
    : remove o caractere # de l
4 - nos códigos que vão pro montador, # é comentario
5 - keys é uma lista (modificável)
  -> pop remove da lista, append coloca;
  -> tamanho de keys muda (por isso dois ifs)
  -> keys le a linha e divide
6 - label e op vao contar os labels e os opscodes

"""


# Local variables:
# mode: python
# End:
